#!/bin/sh

BUILDPACK_DIR=$(cd "$(dirname $0)" && pwd)

mkdir -p "$1" "$2"
BUILD_DIR=$(cd "$1/" && pwd)
CACHE_DIR=$(cd "$2/" && pwd)

TOOL_DIR=$BUILD_DIR/toolchain
ARCHIVE_DIR=$CACHE_DIR/archives
mkdir -p "$TOOL_DIR" "$ARCHIVE_DIR"

DMD_ARCHIVE_PATH=http://downloads.dlang.org.s3-website-us-east-1.amazonaws.com/releases/2013
DMD_ARCHIVE=dmd.2.062
DUB_ARCHIVE_PATH=http://registry.vibed.org/files
DUB_ARCHIVE=dub-0.9.13-linux-x86_64

indent() {
  sed -u 's/^/       /'
}

# download latest archives
cd $ARCHIVE_DIR
if [ ! -f $ARCHIVE_DIR/$DMD_ARCHIVE.zip ]; then
    echo
    echo "-----> Downloading DMD"
    rm -f dmd*.zip
    curl $DMD_ARCHIVE_PATH/$DMD_ARCHIVE.zip -o $DMD_ARCHIVE.zip
fi | indent
if [ ! -f $ARCHIVE_DIR/$DUB_ARCHIVE.tar.gz ]; then
    echo
    echo "-----> Downloading dub package manager"
    rm -f dub*.tar.gz
    curl $DUB_ARCHIVE_PATH/$DUB_ARCHIVE.tar.gz -o $DUB_ARCHIVE.tar.gz 
fi | indent

# initialise toolchain
export PATH=$TOOL_DIR/dmd2/linux/bin64:$TOOL_DIR/$DUB_ARCHIVE/bin:$BUILDPACK_DIR:$PATH
echo
echo "-----> Setting PATH: $PATH"
echo
echo "-----> Initializing toolchain"
cd $TOOL_DIR

# expand DMD
7za x $ARCHIVE_DIR/$DMD_ARCHIVE.zip | indent

# expand dub
mkdir -p $TOOL_DIR/$DUB_ARCHIVE/bin
cd $TOOL_DIR/$DUB_ARCHIVE/bin
tar xzf $ARCHIVE_DIR/$DUB_ARCHIVE.tar.gz

echo
echo "-----> Building app"

# link the dub cache to the cache folder
mkdir -p $CACHE_DIR/.dub

if [ ! -e $BUILD_DIR/.dub ]; then
    ln -s $CACHE_DIR/.dub $BUILD_DIR/.dub
fi

# if package.json has contents, run dub build
status=1
if [ ! -s $BUILD_DIR/package.json ]; then
  echo
  echo "package.json was empty"
  status=   1
else
  cd $BUILD_DIR
  if [ -f dub-prebuild ]; then
    echo
    echo "Running dub-prebuild..."
    ./dub-prebuild
  fi
  
  echo
  echo "Running dub build..."
  if dub build; then
    echo
    echo "Build was successful"
    status=0
  else
    echo
    echo "!!! Build failed"
    status=1
  fi
fi | indent

# clean up any remaining sources
cd $BUILD_DIR
rm -rf "$TOOL_DIR" source src views

exit $status
